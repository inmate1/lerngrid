// (**) –ó–∞–¥–∞—á–∞ —Å —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–π –Ω–∞ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏
// –≠—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–∞—á –≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ —Å–∞–º—ã—Ö —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞—Ö. –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã —Å–ª—ã—à–∞–ª–∏ –ø—Ä–æ —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏, –≥–¥–µ –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —á–∏—Å–ª–∞ —Ä–∞–≤–Ω—ã 0 –∏ 1, –∞ –∫–∞–∂–¥–æ–µ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ —Ä–∞–≤–Ω–æ —Å—É–º–º–µ –¥–≤—É—Ö –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —á–∏—Å–µ–ª. –ò –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö —á–∞—Å—Ç–æ –¥–∞—é—Ç –∑–∞–¥–∞—á–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —ç—Ç–∏–º–∏ —á–∏—Å–ª–∞–º–∏. –ï—Å—Ç—å —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏ –∏ —Ç—É—Ç –º—ã –ø–æ–ø—Ä–æ–±—É–µ–º —Ä–µ—à–∏—Ç—å –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö.
// –°—Ä–∞–∑—É —Å–∫–∞–∂—É, —á—Ç–æ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ—à–µ–Ω–∏—è —á–µ—Ä–µ–∑ –ø—Ä–∏–µ–º, –Ω–∞–∑—ã–≤–∞–µ–º—ã–π —Ä–µ–∫—É—Ä—Å–∏—è. –û–Ω –¥–∞–ª—å—à–µ –ø–æ –∫—É—Ä—Å—É. –ù–æ —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å –±–µ–∑ –µ—ë –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è. –¢–∞–∫–∏–µ —É—Å–ª–æ–≤–∏—è —á–∞—Å—Ç–æ —Å—Ç–∞–≤—è—Ç –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è—Ö. –ö–æ–≥–¥–∞ –≤—ã –ø—Ä–æ–π–¥–µ—Ç–µ —É—Ä–æ–∫ –ø–æ —Ä–µ–∫—É—Ä—Å–∏–∏, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Ä–µ—à–∏—Ç—å –ø–æ –¥—Ä—É–≥–æ–º—É. –¢–∞–∫ –∂–µ –ø–æ–¥—Å–∫–∞–∑–∫—É (–Ω–æ –Ω–µ —Ä–µ—à–µ–Ω–∏–µ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏) –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ —Ç—É—Ç. –ù–æ –ø–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å üôÇ
// –ó–∞–¥–∞—á–∞:
// –°–æ–∑–¥–∞–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –≤ —Å–µ–±—è –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç-—Ü–µ–ª–æ–µ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ. –û–Ω–∞ –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É, –≤ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥—É—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤—ã–≤–µ–¥–µ–Ω—ã —á–∏—Å–ª–∞ –§–∏–±–æ–Ω–∞—á—á–∏. –ü—Ä–∏—á–µ–º, –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç—É.
// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ —á–∏—Å–ª–æ - –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É. –†–µ—à–∞—Ç—å –±–µ–∑ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ä–µ–∫—É—Ä—Å–∏–∏.
////////////////////////////////////////////
function fibonacciNumbers(count) {
  if (!Number.isInteger(count) || count <= 0) {
    return '';
  }

  let fibonacci = [];
    for (let i = 0; i < count; i++) {
        if (i === 0) {
            fibonacci.push(0);
        } else if (i === 1) {
            fibonacci.push(1);
        } else {
            console.log(fibonacci);
            let nextNumber = fibonacci[i - 1] + fibonacci[i - 2];
            fibonacci.push(nextNumber);
          
        }
       
    }
  return fibonacci.join(' ');
}
console.log(fibonacciNumbers(4)); // => ''0 1 1 2"
console.log(fibonacciNumbers(7)); // => ''0 1 1 2 3 5 8"
console.log(fibonacciNumbers('7')); // => ''"
console.log(fibonacciNumbers(1)); // => "0"
console.log(fibonacciNumbers(0)); // => ''"
//////////////////////////////////////////////////
function fib(num) {
  if (typeof num !== 'number' || num <= 0 || !Number.isInteger(num)) {
    return '';
  }

  let result = '';                   //""0
  let first = 0;                     //0 1 1 2 3 5 8
  let second = 1;                    //1 1 2 3 5 8 13

  for (let i = 0; i < num; i++) {    //0 1 2 3 4 5 6
    if (i + 1 === num) {             //false
      result += `${first}`;
      // –ë–µ–∑ –ø—Ä–æ–±–µ–ª–∞ –≤ –∫–æ–Ω—Ü–µ
    } else {
        result += `${first} `;       //0+1+1+2+3+5+8
        // console.log(result);
    }

    let third = first + second;      //1 2 3 5 8 1321
    first = second;                  //1 1 2 3 5 8 13
    second = third;                  //1 2 3 5 8 13 21
  }

  return result;
}

console.log(fib(4)); // => ''0 1 1 2"
console.log(fib(10)); // => ''0 1 1 2 3 5 8"
console.log(fib('7')); // => ''"
console.log(fib(1)); // => "0"
console.log(fib(0)); // => ''"

// Find

function foo(array, target) {
  let left = array[0];
  let right = array.length - 1;
  while (left <= right) {
    let center = Math.floor((left + right )/ 2);
    // (parameter) target: any
    if (array[center] === target) {
      return center;
    } else if (array[center] < target) {
      left = center + 1;
    } else {
      right = center - 1;
     
    } 
    
  }
   return -1;
}

// [1, 3, 5, 7]
const arr = [1, 3, 5, 7, 9, 11, 13, 14, 15, 26, 28, 34];
const num = 5;
const index = foo(arr, num);
console.log(index);